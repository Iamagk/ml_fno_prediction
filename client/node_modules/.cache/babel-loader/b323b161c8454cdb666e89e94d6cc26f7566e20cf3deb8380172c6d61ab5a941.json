{"ast":null,"code":"const API_URL=\"http://127.0.0.1:8000\";export const predictMarket=async features=>{try{const response=await fetch(`${API_URL}/predict`,{// Corrected URL usage\nmethod:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({features})});if(!response.ok){throw new Error(`HTTP error! Status: ${response.status}`);}const data=await response.json();return data;}catch(error){console.error(\"Error calling API:\",error);return null;}};","map":{"version":3,"names":["API_URL","predictMarket","features","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console"],"sources":["/Users/allenngeorge/Files/Projects/ml_fno_prediction/client/src/api.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:8000\";\n\nexport const predictMarket = async (features) => {\n    try {\n        const response = await fetch(`${API_URL}/predict`, {  // Corrected URL usage\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ features }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error calling API:\", error);\n        return null;\n    }\n};"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,uBAAuB,CAEvC,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC7C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,OAAO,UAAU,CAAE,CAAG;AAClDK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAS,CAAC,CACrC,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC,CAC7D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,MAAO,KAAI,CACf,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}