{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:8000\";\nexport const predictMarket = async features => {\n  try {\n    const response = await fetch(`${API_URL}/server/predict`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        features\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error calling API:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","predictMarket","features","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console"],"sources":["/Users/allenngeorge/Projects/ml_fno_prediction/client/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL|| \"http://127.0.0.1:8000\";\n\nexport const predictMarket = async (features) => {\n  try {\n    const response = await fetch(`${API_URL}/server/predict`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ features }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error calling API:\", error);\n    return null;\n  }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAG,uBAAuB;AAEvE,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,iBAAiB,EAAE;MACxDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAS,CAAC;IACnC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}