{"ast":null,"code":"var _jsxFileName = \"/Users/allenngeorge/Files/Projects/ml_fno_prediction/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { predictMarket } from \"./api\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FEATURE_NAMES = [\"Close\", \"High\", \"Low\", \"Open\", \"Volume\", \"SMA_5\", \"SMA_10\", \"RSI_14\", \"MACD\", \"MACD_Signal\", \"EMA_9\", \"EMA_21\", \"EMA_50\", \"EMA_200\", \"BB_upper\", \"BB_middle\", \"BB_lower\", \"MACD_Hist\", \"STOCH_K\", \"STOCH_D\", \"ATR\", \"ROC_10\", \"OBV\", \"VWAP\", \"ADX\", \"CCI\", \"WILLR_14\", \"MOM_10\", \"CMF\", \"PSAR\", \"Aroon_Up\", \"Aroon_Down\", \"Return\"];\nconst App = () => {\n  _s();\n  const [features, setFeatures] = useState(Array(33).fill(\"\"));\n  const [prediction, setPrediction] = useState(null);\n  const handleChange = (index, value) => {\n    const newFeatures = [...features];\n    newFeatures[index] = value;\n    setFeatures(newFeatures);\n  };\n  const handleSubmit = async () => {\n    const featureValues = features.map(val => parseFloat(val) || 0);\n    const result = await predictMarket(featureValues);\n    setPrediction(result === null || result === void 0 ? void 0 : result.prediction);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"F&O Market Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: FEATURE_NAMES.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: features[index],\n          onChange: e => handleChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prediction: \", prediction === 1 ? \"UPTREND ðŸ“ˆ\" : \"DOWNTREND ðŸ“‰\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PcCOHRBsBF1yckgrEcJ1UDX/vfE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","predictMarket","jsxDEV","_jsxDEV","FEATURE_NAMES","App","_s","features","setFeatures","Array","fill","prediction","setPrediction","handleChange","index","value","newFeatures","handleSubmit","featureValues","map","val","parseFloat","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/allenngeorge/Files/Projects/ml_fno_prediction/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { predictMarket } from \"./api\";\nimport \"./index.css\";\n\nconst FEATURE_NAMES = [\n  \"Close\", \"High\", \"Low\", \"Open\", \"Volume\", \"SMA_5\", \"SMA_10\", \"RSI_14\", \"MACD\", \"MACD_Signal\",\n  \"EMA_9\", \"EMA_21\", \"EMA_50\", \"EMA_200\", \"BB_upper\", \"BB_middle\", \"BB_lower\", \"MACD_Hist\",\n  \"STOCH_K\", \"STOCH_D\", \"ATR\", \"ROC_10\", \"OBV\", \"VWAP\", \"ADX\", \"CCI\", \"WILLR_14\", \"MOM_10\",\n  \"CMF\", \"PSAR\", \"Aroon_Up\", \"Aroon_Down\", \"Return\"\n];\n\nconst App = () => {\n  const [features, setFeatures] = useState(Array(33).fill(\"\"));\n  const [prediction, setPrediction] = useState(null);\n\n  const handleChange = (index, value) => {\n    const newFeatures = [...features];\n    newFeatures[index] = value;\n    setFeatures(newFeatures);\n  };\n\n  const handleSubmit = async () => {\n    const featureValues = features.map(val => parseFloat(val) || 0);\n    const result = await predictMarket(featureValues);\n    setPrediction(result?.prediction);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>F&O Market Prediction</h1>\n      \n      <div className=\"form-container\">\n        {FEATURE_NAMES.map((name, index) => (\n          <div key={index} className=\"input-group\">\n            <label>{name}</label>\n            <input\n              type=\"number\"\n              value={features[index]}\n              onChange={(e) => handleChange(index, e.target.value)}\n            />\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleSubmit}>Predict</button>\n\n      {prediction !== null && (\n        <div className=\"result\">\n          <h2>Prediction: {prediction === 1 ? \"UPTREND ðŸ“ˆ\" : \"DOWNTREND ðŸ“‰\"}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}